def floodFill(img, row, col, p):
    start = img[row][col]  # Get the starting value (color)
    queue = [(row, col)]   # Initialize the queue with the starting cell
    visited = set()        # Create a set to track visited cells

    while len(queue) > 0:  # Continue until the queue is empty
        row, col = queue.pop(0)  # Get the current cell from the queue
        visited.add((row, col))  # Mark the current cell as visited
        img[row][col] = p        # Fill the current cell with the new value

        # Check the neighbors of the current cell
        for row, col in neighbors(img, row, col, start):
            if (row, col) not in visited:  # Only process unvisited neighbors
                queue.append((row, col))   # Add the valid neighbor to the queue
def neighbors(img, row, col, start):
    indices = [(row - 1, col), (row + 1, col), (row, col - 1), (row, col + 1)]
    return [(row, col) for row, col in indices if isValid(img, row, col) and img[row][col] == start]

def isValid(img, row, col):
    return row >= 0 and col >= 0 and row < len(img) and col < len(img[0])
